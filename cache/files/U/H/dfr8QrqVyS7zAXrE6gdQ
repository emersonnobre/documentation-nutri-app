1656470734
AwuilbDvXz%3Abeb7be1e416bc59ef5928445a6ad809a-3e5cc248c29764eec8f306349a4cdac3
s:7788:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjNlNWNjMjQ4YzI5NzY0ZWVjOGYzMDYzNDlhNGNkYWMzIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MzA6InRlbGFfaGlzdG9yaWNvX2FsaW1lbnRhcl8yLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjM0OiJhcHAvdGVsYV9oaXN0b3JpY29fYWxpbWVudGFyXzIucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo1MDIwOiI8P3BocApyZXF1aXJlX29uY2UoImNvbmZpZy5waHAiKTsKaWYgKCFpc3NldCgkX1NFU1NJT05bImlkIl0pKSAKICAgIGhlYWRlciAoImxvY2F0aW9uOiAuLi9pbmRleC5odG1sIik7CiRfU0VTU0lPTlsicmVmIl0gPSAkX0dFVFsicmVmIl07CiRwYWNpZW50ZSA9IG5ldyBQYWNpZW50ZSgpOwokcGFjaWVudGUtPmxvYWRieUlkKCRfU0VTU0lPTlsiaWRwYWNpZW50ZSJdKTsKJGlkcmVmID0gUGFjaWVudGU6OnJldHVybklkYnlOYW1lKCRfU0VTU0lPTlsicmVmIl0pOwokc3FsID0gbmV3IFNxbCgpOwokYWxpbWVudG8gPSBuZXcgQWxpbWVudG8oKTsKPz4KPCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0LWJyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+TnV0cmk8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvcmVzZXQuY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2VzdGlsby5waHAiPgogICAgPGxpbmsKICAgICAgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEA0MDA7NzAwJmRpc3BsYXk9c3dhcCIKICAgICAgcmVsPSJzdHlsZXNoZWV0IgogICAgLz4KPC9oZWFkPgo8Ym9keSBjbGFzcz0iYm9keUEiPgogICAgPGhlYWRlciBjbGFzcz0iY2FiZWNhbGhvIj4KICAgICAgICA8aDEgY2xhc3M9InRleHQteGwiPkhpc3TDs3JpY28gYWxpbWVudGFyIHBlcnNvbmFsaXphZG8gZG8gPD89JF9TRVNTSU9OWyJyZWYiXT8+PC9oMT4KICAgICAgICA8aDEgY2xhc3M9InRleHQtbGl0dGxlIGltcG9ydGFudC10ZXh0IHRleHQtYm9sZCI+UGVyw61vZG86IDw/PSRfU0VTU0lPTlsiaW5pY2lhbCJdPz4gLS0gPD89JF9TRVNTSU9OWyJmaW5hbCJdPz48L2gxPgogICAgPC9oZWFkZXI+CiAgICA8ZGl2IGNsYXNzPSJib3gteGwgc2Nyb2xsIHhsIj4KICAgICAgICAgICAgPD9waHAgCiAgICAgICAgICAgIAogICAgICAgICAgICAkZGF0YXMgPSAkcGFjaWVudGUtPmdldFBlcnNvbmFsaXplRGF0ZUJ5UmVmKCRfU0VTU0lPTlsiaW5pY2lhbCJdLCAkX1NFU1NJT05bImZpbmFsIl0sICRfU0VTU0lPTlsicmVmIl0pOwogICAgICAgICAgICBpZiAoY291bnQoJGRhdGFzKSA+IDApewogICAgICAgICAgICAgICAgZm9yZWFjaCAoJGRhdGFzIGFzICRkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGRhdGEgYXMgJGtleSA9PiAkZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICAkdHMgPSBuZXcgRGF0ZVRpbWUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgJHRzID0gc3RydG90aW1lKCRkYXRhKTsKICAgICAgICAgICAgICAgID8+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGlzdG9yaWNvIGJsb2NrIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbGl0dGxlIHRleHQtYm9sZCBpbXBvcnRhbnQtdGV4dCI+PD89ZGF0ZSgiZC9tL1kiLCAkdHMpPz48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1saXR0bGUgaW1wb3J0YW50LXRleHQiPkFsaW1lbnRvPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtbGl0dGxlIGltcG9ydGFudC10ZXh0Ij5DYXJib2lkcmF0b3MoZyk8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1saXR0bGUgaW1wb3J0YW50LXRleHQiPlByb3Rlw61uYXMoZyk8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1saXR0bGUgaW1wb3J0YW50LXRleHQiPkdvcmR1cmFzKGcpPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtbGl0dGxlIGltcG9ydGFudC10ZXh0Ij5DYWxvcmlhcyhjYWwpPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5vbWVzYWxpbWVudG9zID0gJHBhY2llbnRlLT5nZXRBbGltZW50b3NCeURhdGUoJGRhdGEsICRpZHJlZik7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCgkbm9tZXNhbGltZW50b3MgYXMgJGFsaW1lbnRvbyl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGFsaW1lbnRvbyBhcyAka2V5ID0+ICRub21lYWxpbWVudG8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGlkcyA9ICRzcWwtPnNlbGVjdCgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdCBpZCBmcm9tIGFsaW1lbnRvcyB3aGVyZSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9tZSA9IDpOT01FCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIsIGFycmF5KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzpOT01FJz0+JG5vbWVhbGltZW50bwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKTsKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkaWRzIGFzICRpZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGlkIGFzICRrZXkgPT4gJHZhbHVlaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWxpbWVudG8tPmxvYWRieUlkKCR2YWx1ZWlkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPz4gICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRxdWFudGlkYWRlcyA9IEFsaW1lbnRvOjpyZXR1cm5RdWFudGlkYWRlKCRub21lYWxpbWVudG8sICRfU0VTU0lPTlsiaWRwYWNpZW50ZSJdLCAkaWRyZWYsICRkYXRhKTsKICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHF1YW50aWRhZGVzIGFzICRxdWFudGlkYWRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHF1YW50aWRhZGUgYXMgJGtleSA9PiAkdmFsdWVxdWFudGlkYWRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRxdGQgPSAkdmFsdWVxdWFudGlkYWRlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1saXR0bGUgdGV4dC1sZWZ0Ij48Pz0kYWxpbWVudG8tPmdldE5vbWUoKT8+ICg8Pz0kcXRkPz4gZyk8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxpdHRsZSI+PD89JGFsaW1lbnRvLT5jYWxjdWxhQ2FyYm9pZHJhdG9zKCRxdGQpPz48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxpdHRsZSI+PD89JGFsaW1lbnRvLT5jYWxjdWxhUHJvdGVpbmFzKCRxdGQpPz48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxpdHRsZSI+PD89JGFsaW1lbnRvLT5jYWxjdWxhR29yZHVyYXMoJHF0ZCk/PjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtbGl0dGxlIj48Pz0kYWxpbWVudG8tPmNhbGN1bGFDYWxvcmlhcygkcXRkKT8+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/PgogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPD9waHAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgID8+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1taW4gaW1wb3J0YW50LXRleHQgdGV4dC1ib2xkIj5OZW5odW0gYWxpbWVudG8gZm9pIGluc2VyaWRvIGF0w6kgbyBtb21lbnRvLjwvcD4KICAgICAgICAgICAgICAgIDw/cGhwCiAgICAgICAgICAgIH0KICAgICAgICAgICAgPz4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bkFic29sdXRlIiBvbmNsaWNrPSJkb2N1bWVudC5sb2NhdGlvbj0ndGVsYV9wbGFub19oaXN0b3JpY29fMi5waHAnIj5Wb2x0YXI8L2J1dHRvbj4KPC9ib2R5Pgo8L2h0bWw+IjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";