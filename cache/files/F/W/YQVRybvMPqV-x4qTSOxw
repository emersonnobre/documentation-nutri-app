1656470734
AwuilbDvXz%3Aa01c951ae59be907d7c3a9ffe135b107-ec77f8eb0a2f5d38bad3ebf6bda67372
s:7568:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImVjNzdmOGViMGEyZjVkMzhiYWQzZWJmNmJkYTY3MzcyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6Mjg6InRlbGFfaGlzdG9yaWNvX2FsaW1lbnRhci5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czozMjoiYXBwL3RlbGFfaGlzdG9yaWNvX2FsaW1lbnRhci5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjQ4NTg6Ijw/cGhwCnJlcXVpcmVfb25jZSgiY29uZmlnLnBocCIpOwppZiAoIWlzc2V0KCRfU0VTU0lPTlsiaWQiXSkpIAogICAgaGVhZGVyICgibG9jYXRpb246IC4uL2luZGV4Lmh0bWwiKTsKJF9TRVNTSU9OWyJyZWYiXSA9ICRfR0VUWyJyZWYiXTsKJHBhY2llbnRlID0gbmV3IFBhY2llbnRlKCk7CiRwYWNpZW50ZS0+bG9hZGJ5SWQoJF9TRVNTSU9OWyJpZHBhY2llbnRlIl0pOwokaWRyZWYgPSBQYWNpZW50ZTo6cmV0dXJuSWRieU5hbWUoJF9TRVNTSU9OWyJyZWYiXSk7CiRzcWwgPSBuZXcgU3FsKCk7CiRhbGltZW50byA9IG5ldyBBbGltZW50bygpOwoKPz4KPCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0LWJyIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+TnV0cmk8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvcmVzZXQuY3NzIj4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL2VzdGlsby5waHAiPgogICAgPGxpbmsKICAgICAgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEA0MDA7NzAwJmRpc3BsYXk9c3dhcCIKICAgICAgcmVsPSJzdHlsZXNoZWV0IgogICAgLz4KPC9oZWFkPgo8Ym9keSBjbGFzcz0iYm9keUEiPgogICAgPGhlYWRlciBjbGFzcz0iY2FiZWNhbGhvIj4KICAgICAgICA8aDEgY2xhc3M9InRleHQteGwiPkhpc3TDs3JpY28gYWxpbWVudGFyIGRvIDw/PSRwYWNpZW50ZS0+Z2V0Tm9tZSgpPz4gKDw/PSRfU0VTU0lPTlsicmVmIl0/Pik8L2gxPgogICAgPC9oZWFkZXI+CiAgICA8ZGl2IGNsYXNzPSJib3gteGwgc2Nyb2xsIHhsIj4KICAgICAgICAgICAgPD9waHAgCiAgICAgICAgICAgIAogICAgICAgICAgICAkZGF0YXMgPSAkcGFjaWVudGUtPmdldEFsbERhdGVCeVJlZigkX1NFU1NJT05bInJlZiJdKTsKICAgICAgICAgICAgaWYgKGNvdW50KCRkYXRhcykgPiAwKXsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRkYXRhcyBhcyAkZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRkYXRhIGFzICRrZXkgPT4gJGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRzID0gbmV3IERhdGVUaW1lKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICR0cyA9IHN0cnRvdGltZSgkZGF0YSk7CiAgICAgICAgICAgICAgICA/PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imhpc3RvcmljbyBibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWxpdHRsZSB0ZXh0LWJvbGQgaW1wb3J0YW50LXRleHQiPjw/PWRhdGUoImQvbS9ZIiwgJHRzKT8+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InRhYmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtbGl0dGxlIGltcG9ydGFudC10ZXh0Ij5BbGltZW50bzwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LWxpdHRsZSBpbXBvcnRhbnQtdGV4dCI+Q2FyYm9pZHJhdG9zKGcpPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtbGl0dGxlIGltcG9ydGFudC10ZXh0Ij5Qcm90ZcOtbmFzKGcpPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtbGl0dGxlIGltcG9ydGFudC10ZXh0Ij5Hb3JkdXJhcyhnKTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LWxpdHRsZSBpbXBvcnRhbnQtdGV4dCI+Q2Fsb3JpYXMoY2FsKTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPD9waHAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRub21lc2FsaW1lbnRvcyA9ICRwYWNpZW50ZS0+Z2V0QWxpbWVudG9zQnlEYXRlKCRkYXRhLCAkaWRyZWYpOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2goJG5vbWVzYWxpbWVudG9zIGFzICRhbGltZW50b28pewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRhbGltZW50b28gYXMgJGtleSA9PiAkbm9tZWFsaW1lbnRvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpZHMgPSAkc3FsLT5zZWxlY3QoIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QgaWQgZnJvbSBhbGltZW50b3Mgd2hlcmUgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vbWUgPSA6Tk9NRQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiLCBhcnJheSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc6Tk9NRSc9PiRub21lYWxpbWVudG8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSk7CiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGlkcyBhcyAkaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRpZCBhcyAka2V5ID0+ICR2YWx1ZWlkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGFsaW1lbnRvLT5sb2FkYnlJZCgkdmFsdWVpZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgID8+ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcXVhbnRpZGFkZXMgPSBBbGltZW50bzo6cmV0dXJuUXVhbnRpZGFkZSgkbm9tZWFsaW1lbnRvLCAkX1NFU1NJT05bImlkcGFjaWVudGUiXSwgJGlkcmVmLCAkZGF0YSk7CiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRxdWFudGlkYWRlcyBhcyAkcXVhbnRpZGFkZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRxdWFudGlkYWRlIGFzICRrZXkgPT4gJHZhbHVlcXVhbnRpZGFkZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcXRkID0gJHZhbHVlcXVhbnRpZGFkZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtbGl0dGxlIHRleHQtbGVmdCI+PD89JGFsaW1lbnRvLT5nZXROb21lKCk/PiAoPD89JHF0ZD8+IGcpPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1saXR0bGUiPjw/PSRhbGltZW50by0+Y2FsY3VsYUNhcmJvaWRyYXRvcygkcXRkKT8+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1saXR0bGUiPjw/PSRhbGltZW50by0+Y2FsY3VsYVByb3RlaW5hcygkcXRkKT8+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1saXR0bGUiPjw/PSRhbGltZW50by0+Y2FsY3VsYUdvcmR1cmFzKCRxdGQpPz48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxpdHRsZSI+PD89JGFsaW1lbnRvLT5jYWxjdWxhQ2Fsb3JpYXMoJHF0ZCk/PjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPz4KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDw/cGhwCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICA/PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbWluIGltcG9ydGFudC10ZXh0IHRleHQtYm9sZCI+TmVuaHVtIGFsaW1lbnRvIGZvaSBpbnNlcmlkbyBhdMOpIG8gbW9tZW50by48L3A+CiAgICAgICAgICAgICAgICA8P3BocAogICAgICAgICAgICB9CiAgICAgICAgICAgID8+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG5BYnNvbHV0ZSIgb25jbGljaz0iZG9jdW1lbnQubG9jYXRpb249J3RlbGFfcGxhbm9faGlzdG9yaWNvLnBocCciPlZvbHRhcjwvYnV0dG9uPgo8L2JvZHk+CjwvaHRtbD4iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";